// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: samples/samples.proto

package samples

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ScalarTypes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Double   float64 `protobuf:"fixed64,1,opt,name=double,proto3" json:"double,omitempty"`
	Float    float32 `protobuf:"fixed32,2,opt,name=float,proto3" json:"float,omitempty"`
	Int32    int32   `protobuf:"varint,3,opt,name=int32,proto3" json:"int32,omitempty"`
	Int64    int64   `protobuf:"varint,4,opt,name=int64,proto3" json:"int64,omitempty"`
	Uint32   uint32  `protobuf:"varint,5,opt,name=uint32,proto3" json:"uint32,omitempty"`
	Uint64   uint64  `protobuf:"varint,6,opt,name=uint64,proto3" json:"uint64,omitempty"`
	Sint32   int32   `protobuf:"zigzag32,7,opt,name=sint32,proto3" json:"sint32,omitempty"`
	Sint64   int64   `protobuf:"zigzag64,8,opt,name=sint64,proto3" json:"sint64,omitempty"`
	Fixed32  uint32  `protobuf:"fixed32,9,opt,name=fixed32,proto3" json:"fixed32,omitempty"`
	Fixed64  uint64  `protobuf:"fixed64,10,opt,name=fixed64,proto3" json:"fixed64,omitempty"`
	Sfixed32 int32   `protobuf:"fixed32,11,opt,name=sfixed32,proto3" json:"sfixed32,omitempty"`
	Sfixed64 int64   `protobuf:"fixed64,12,opt,name=sfixed64,proto3" json:"sfixed64,omitempty"`
	Bool     bool    `protobuf:"varint,13,opt,name=bool,proto3" json:"bool,omitempty"`
	String_  string  `protobuf:"bytes,14,opt,name=string,proto3" json:"string,omitempty"`
	Bytes    []byte  `protobuf:"bytes,15,opt,name=bytes,proto3" json:"bytes,omitempty"`
}

func (x *ScalarTypes) Reset() {
	*x = ScalarTypes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_samples_samples_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScalarTypes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScalarTypes) ProtoMessage() {}

func (x *ScalarTypes) ProtoReflect() protoreflect.Message {
	mi := &file_samples_samples_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScalarTypes.ProtoReflect.Descriptor instead.
func (*ScalarTypes) Descriptor() ([]byte, []int) {
	return file_samples_samples_proto_rawDescGZIP(), []int{0}
}

func (x *ScalarTypes) GetDouble() float64 {
	if x != nil {
		return x.Double
	}
	return 0
}

func (x *ScalarTypes) GetFloat() float32 {
	if x != nil {
		return x.Float
	}
	return 0
}

func (x *ScalarTypes) GetInt32() int32 {
	if x != nil {
		return x.Int32
	}
	return 0
}

func (x *ScalarTypes) GetInt64() int64 {
	if x != nil {
		return x.Int64
	}
	return 0
}

func (x *ScalarTypes) GetUint32() uint32 {
	if x != nil {
		return x.Uint32
	}
	return 0
}

func (x *ScalarTypes) GetUint64() uint64 {
	if x != nil {
		return x.Uint64
	}
	return 0
}

func (x *ScalarTypes) GetSint32() int32 {
	if x != nil {
		return x.Sint32
	}
	return 0
}

func (x *ScalarTypes) GetSint64() int64 {
	if x != nil {
		return x.Sint64
	}
	return 0
}

func (x *ScalarTypes) GetFixed32() uint32 {
	if x != nil {
		return x.Fixed32
	}
	return 0
}

func (x *ScalarTypes) GetFixed64() uint64 {
	if x != nil {
		return x.Fixed64
	}
	return 0
}

func (x *ScalarTypes) GetSfixed32() int32 {
	if x != nil {
		return x.Sfixed32
	}
	return 0
}

func (x *ScalarTypes) GetSfixed64() int64 {
	if x != nil {
		return x.Sfixed64
	}
	return 0
}

func (x *ScalarTypes) GetBool() bool {
	if x != nil {
		return x.Bool
	}
	return false
}

func (x *ScalarTypes) GetString_() string {
	if x != nil {
		return x.String_
	}
	return ""
}

func (x *ScalarTypes) GetBytes() []byte {
	if x != nil {
		return x.Bytes
	}
	return nil
}

type ScalarTypesOptional struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Double   *float64 `protobuf:"fixed64,1,opt,name=double,proto3,oneof" json:"double,omitempty"`
	Float    *float32 `protobuf:"fixed32,2,opt,name=float,proto3,oneof" json:"float,omitempty"`
	Int32    *int32   `protobuf:"varint,3,opt,name=int32,proto3,oneof" json:"int32,omitempty"`
	Int64    *int64   `protobuf:"varint,4,opt,name=int64,proto3,oneof" json:"int64,omitempty"`
	Uint32   *uint32  `protobuf:"varint,5,opt,name=uint32,proto3,oneof" json:"uint32,omitempty"`
	Uint64   *uint64  `protobuf:"varint,6,opt,name=uint64,proto3,oneof" json:"uint64,omitempty"`
	Sint32   *int32   `protobuf:"zigzag32,7,opt,name=sint32,proto3,oneof" json:"sint32,omitempty"`
	Sint64   *int64   `protobuf:"zigzag64,8,opt,name=sint64,proto3,oneof" json:"sint64,omitempty"`
	Fixed32  *uint32  `protobuf:"fixed32,9,opt,name=fixed32,proto3,oneof" json:"fixed32,omitempty"`
	Fixed64  *uint64  `protobuf:"fixed64,10,opt,name=fixed64,proto3,oneof" json:"fixed64,omitempty"`
	Sfixed32 *int32   `protobuf:"fixed32,11,opt,name=sfixed32,proto3,oneof" json:"sfixed32,omitempty"`
	Sfixed64 *int64   `protobuf:"fixed64,12,opt,name=sfixed64,proto3,oneof" json:"sfixed64,omitempty"`
	Bool     *bool    `protobuf:"varint,13,opt,name=bool,proto3,oneof" json:"bool,omitempty"`
	String_  *string  `protobuf:"bytes,14,opt,name=string,proto3,oneof" json:"string,omitempty"`
	Bytes    []byte   `protobuf:"bytes,15,opt,name=bytes,proto3,oneof" json:"bytes,omitempty"`
}

func (x *ScalarTypesOptional) Reset() {
	*x = ScalarTypesOptional{}
	if protoimpl.UnsafeEnabled {
		mi := &file_samples_samples_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScalarTypesOptional) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScalarTypesOptional) ProtoMessage() {}

func (x *ScalarTypesOptional) ProtoReflect() protoreflect.Message {
	mi := &file_samples_samples_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScalarTypesOptional.ProtoReflect.Descriptor instead.
func (*ScalarTypesOptional) Descriptor() ([]byte, []int) {
	return file_samples_samples_proto_rawDescGZIP(), []int{1}
}

func (x *ScalarTypesOptional) GetDouble() float64 {
	if x != nil && x.Double != nil {
		return *x.Double
	}
	return 0
}

func (x *ScalarTypesOptional) GetFloat() float32 {
	if x != nil && x.Float != nil {
		return *x.Float
	}
	return 0
}

func (x *ScalarTypesOptional) GetInt32() int32 {
	if x != nil && x.Int32 != nil {
		return *x.Int32
	}
	return 0
}

func (x *ScalarTypesOptional) GetInt64() int64 {
	if x != nil && x.Int64 != nil {
		return *x.Int64
	}
	return 0
}

func (x *ScalarTypesOptional) GetUint32() uint32 {
	if x != nil && x.Uint32 != nil {
		return *x.Uint32
	}
	return 0
}

func (x *ScalarTypesOptional) GetUint64() uint64 {
	if x != nil && x.Uint64 != nil {
		return *x.Uint64
	}
	return 0
}

func (x *ScalarTypesOptional) GetSint32() int32 {
	if x != nil && x.Sint32 != nil {
		return *x.Sint32
	}
	return 0
}

func (x *ScalarTypesOptional) GetSint64() int64 {
	if x != nil && x.Sint64 != nil {
		return *x.Sint64
	}
	return 0
}

func (x *ScalarTypesOptional) GetFixed32() uint32 {
	if x != nil && x.Fixed32 != nil {
		return *x.Fixed32
	}
	return 0
}

func (x *ScalarTypesOptional) GetFixed64() uint64 {
	if x != nil && x.Fixed64 != nil {
		return *x.Fixed64
	}
	return 0
}

func (x *ScalarTypesOptional) GetSfixed32() int32 {
	if x != nil && x.Sfixed32 != nil {
		return *x.Sfixed32
	}
	return 0
}

func (x *ScalarTypesOptional) GetSfixed64() int64 {
	if x != nil && x.Sfixed64 != nil {
		return *x.Sfixed64
	}
	return 0
}

func (x *ScalarTypesOptional) GetBool() bool {
	if x != nil && x.Bool != nil {
		return *x.Bool
	}
	return false
}

func (x *ScalarTypesOptional) GetString_() string {
	if x != nil && x.String_ != nil {
		return *x.String_
	}
	return ""
}

func (x *ScalarTypesOptional) GetBytes() []byte {
	if x != nil {
		return x.Bytes
	}
	return nil
}

type ScalarTypesRepeated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Double   []float64 `protobuf:"fixed64,1,rep,packed,name=double,proto3" json:"double,omitempty"`
	Float    []float32 `protobuf:"fixed32,2,rep,packed,name=float,proto3" json:"float,omitempty"`
	Int32    []int32   `protobuf:"varint,3,rep,packed,name=int32,proto3" json:"int32,omitempty"`
	Int64    []int64   `protobuf:"varint,4,rep,packed,name=int64,proto3" json:"int64,omitempty"`
	Uint32   []uint32  `protobuf:"varint,5,rep,packed,name=uint32,proto3" json:"uint32,omitempty"`
	Uint64   []uint64  `protobuf:"varint,6,rep,packed,name=uint64,proto3" json:"uint64,omitempty"`
	Sint32   []int32   `protobuf:"zigzag32,7,rep,packed,name=sint32,proto3" json:"sint32,omitempty"`
	Sint64   []int64   `protobuf:"zigzag64,8,rep,packed,name=sint64,proto3" json:"sint64,omitempty"`
	Fixed32  []uint32  `protobuf:"fixed32,9,rep,packed,name=fixed32,proto3" json:"fixed32,omitempty"`
	Fixed64  []uint64  `protobuf:"fixed64,10,rep,packed,name=fixed64,proto3" json:"fixed64,omitempty"`
	Sfixed32 []int32   `protobuf:"fixed32,11,rep,packed,name=sfixed32,proto3" json:"sfixed32,omitempty"`
	Sfixed64 []int64   `protobuf:"fixed64,12,rep,packed,name=sfixed64,proto3" json:"sfixed64,omitempty"`
	Bool     []bool    `protobuf:"varint,13,rep,packed,name=bool,proto3" json:"bool,omitempty"`
	String_  []string  `protobuf:"bytes,14,rep,name=string,proto3" json:"string,omitempty"`
	Bytes    [][]byte  `protobuf:"bytes,15,rep,name=bytes,proto3" json:"bytes,omitempty"`
}

func (x *ScalarTypesRepeated) Reset() {
	*x = ScalarTypesRepeated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_samples_samples_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScalarTypesRepeated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScalarTypesRepeated) ProtoMessage() {}

func (x *ScalarTypesRepeated) ProtoReflect() protoreflect.Message {
	mi := &file_samples_samples_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScalarTypesRepeated.ProtoReflect.Descriptor instead.
func (*ScalarTypesRepeated) Descriptor() ([]byte, []int) {
	return file_samples_samples_proto_rawDescGZIP(), []int{2}
}

func (x *ScalarTypesRepeated) GetDouble() []float64 {
	if x != nil {
		return x.Double
	}
	return nil
}

func (x *ScalarTypesRepeated) GetFloat() []float32 {
	if x != nil {
		return x.Float
	}
	return nil
}

func (x *ScalarTypesRepeated) GetInt32() []int32 {
	if x != nil {
		return x.Int32
	}
	return nil
}

func (x *ScalarTypesRepeated) GetInt64() []int64 {
	if x != nil {
		return x.Int64
	}
	return nil
}

func (x *ScalarTypesRepeated) GetUint32() []uint32 {
	if x != nil {
		return x.Uint32
	}
	return nil
}

func (x *ScalarTypesRepeated) GetUint64() []uint64 {
	if x != nil {
		return x.Uint64
	}
	return nil
}

func (x *ScalarTypesRepeated) GetSint32() []int32 {
	if x != nil {
		return x.Sint32
	}
	return nil
}

func (x *ScalarTypesRepeated) GetSint64() []int64 {
	if x != nil {
		return x.Sint64
	}
	return nil
}

func (x *ScalarTypesRepeated) GetFixed32() []uint32 {
	if x != nil {
		return x.Fixed32
	}
	return nil
}

func (x *ScalarTypesRepeated) GetFixed64() []uint64 {
	if x != nil {
		return x.Fixed64
	}
	return nil
}

func (x *ScalarTypesRepeated) GetSfixed32() []int32 {
	if x != nil {
		return x.Sfixed32
	}
	return nil
}

func (x *ScalarTypesRepeated) GetSfixed64() []int64 {
	if x != nil {
		return x.Sfixed64
	}
	return nil
}

func (x *ScalarTypesRepeated) GetBool() []bool {
	if x != nil {
		return x.Bool
	}
	return nil
}

func (x *ScalarTypesRepeated) GetString_() []string {
	if x != nil {
		return x.String_
	}
	return nil
}

func (x *ScalarTypesRepeated) GetBytes() [][]byte {
	if x != nil {
		return x.Bytes
	}
	return nil
}

var File_samples_samples_proto protoreflect.FileDescriptor

var file_samples_samples_proto_rawDesc = []byte{
	0x0a, 0x15, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf5, 0x02, 0x0a, 0x0b, 0x53, 0x63, 0x61, 0x6c,
	0x61, 0x72, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x75, 0x62, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05,
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x14, 0x0a, 0x05, 0x69,
	0x6e, 0x74, 0x36, 0x34, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x69, 0x6e, 0x74, 0x36,
	0x34, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x69, 0x6e,
	0x74, 0x36, 0x34, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x69, 0x6e, 0x74, 0x36,
	0x34, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x11, 0x52, 0x06, 0x73, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x6e,
	0x74, 0x36, 0x34, 0x18, 0x08, 0x20, 0x01, 0x28, 0x12, 0x52, 0x06, 0x73, 0x69, 0x6e, 0x74, 0x36,
	0x34, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x07, 0x52, 0x07, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x12, 0x18, 0x0a, 0x07, 0x66,
	0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x06, 0x52, 0x07, 0x66, 0x69,
	0x78, 0x65, 0x64, 0x36, 0x34, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33,
	0x32, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0f, 0x52, 0x08, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33,
	0x32, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x10, 0x52, 0x08, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x12, 0x12, 0x0a,
	0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x62, 0x6f, 0x6f,
	0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x79, 0x74,
	0x65, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x22,
	0xed, 0x04, 0x0a, 0x13, 0x53, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x54, 0x79, 0x70, 0x65, 0x73, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x12, 0x1b, 0x0a, 0x06, 0x64, 0x6f, 0x75, 0x62, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x48, 0x00, 0x52, 0x06, 0x64, 0x6f, 0x75, 0x62, 0x6c,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x02, 0x48, 0x01, 0x52, 0x05, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x88, 0x01, 0x01, 0x12,
	0x19, 0x0a, 0x05, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x02,
	0x52, 0x05, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x69, 0x6e,
	0x74, 0x36, 0x34, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x48, 0x03, 0x52, 0x05, 0x69, 0x6e, 0x74,
	0x36, 0x34, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x04, 0x52, 0x06, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x88,
	0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x75, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x04, 0x48, 0x05, 0x52, 0x06, 0x75, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x88, 0x01, 0x01, 0x12,
	0x1b, 0x0a, 0x06, 0x73, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x07, 0x20, 0x01, 0x28, 0x11, 0x48,
	0x06, 0x52, 0x06, 0x73, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06,
	0x73, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x08, 0x20, 0x01, 0x28, 0x12, 0x48, 0x07, 0x52, 0x06,
	0x73, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x66, 0x69, 0x78,
	0x65, 0x64, 0x33, 0x32, 0x18, 0x09, 0x20, 0x01, 0x28, 0x07, 0x48, 0x08, 0x52, 0x07, 0x66, 0x69,
	0x78, 0x65, 0x64, 0x33, 0x32, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x66, 0x69, 0x78, 0x65,
	0x64, 0x36, 0x34, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x06, 0x48, 0x09, 0x52, 0x07, 0x66, 0x69, 0x78,
	0x65, 0x64, 0x36, 0x34, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x73, 0x66, 0x69, 0x78, 0x65,
	0x64, 0x33, 0x32, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0f, 0x48, 0x0a, 0x52, 0x08, 0x73, 0x66, 0x69,
	0x78, 0x65, 0x64, 0x33, 0x32, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x73, 0x66, 0x69, 0x78,
	0x65, 0x64, 0x36, 0x34, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x10, 0x48, 0x0b, 0x52, 0x08, 0x73, 0x66,
	0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x62, 0x6f, 0x6f,
	0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x48, 0x0c, 0x52, 0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x88,
	0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x0d, 0x52, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x88, 0x01, 0x01, 0x12,
	0x19, 0x0a, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x0e,
	0x52, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x64,
	0x6f, 0x75, 0x62, 0x6c, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x42,
	0x08, 0x0a, 0x06, 0x5f, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x69, 0x6e,
	0x74, 0x36, 0x34, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x42, 0x09,
	0x0a, 0x07, 0x5f, 0x75, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x69,
	0x6e, 0x74, 0x33, 0x32, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x42,
	0x0a, 0x0a, 0x08, 0x5f, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x42, 0x0a, 0x0a, 0x08, 0x5f,
	0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x73, 0x66, 0x69, 0x78,
	0x65, 0x64, 0x33, 0x32, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36,
	0x34, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x62, 0x6f, 0x6f, 0x6c, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x22,
	0xfd, 0x02, 0x0a, 0x13, 0x53, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52,
	0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x75, 0x62, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x01, 0x52, 0x06, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x02, 0x52, 0x05,
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x14, 0x0a, 0x05, 0x69,
	0x6e, 0x74, 0x36, 0x34, 0x18, 0x04, 0x20, 0x03, 0x28, 0x03, 0x52, 0x05, 0x69, 0x6e, 0x74, 0x36,
	0x34, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0d, 0x52, 0x06, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x69, 0x6e,
	0x74, 0x36, 0x34, 0x18, 0x06, 0x20, 0x03, 0x28, 0x04, 0x52, 0x06, 0x75, 0x69, 0x6e, 0x74, 0x36,
	0x34, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x11, 0x52, 0x06, 0x73, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x6e,
	0x74, 0x36, 0x34, 0x18, 0x08, 0x20, 0x03, 0x28, 0x12, 0x52, 0x06, 0x73, 0x69, 0x6e, 0x74, 0x36,
	0x34, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x18, 0x09, 0x20, 0x03,
	0x28, 0x07, 0x52, 0x07, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x12, 0x18, 0x0a, 0x07, 0x66,
	0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x06, 0x52, 0x07, 0x66, 0x69,
	0x78, 0x65, 0x64, 0x36, 0x34, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33,
	0x32, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0f, 0x52, 0x08, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33,
	0x32, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x18, 0x0c, 0x20,
	0x03, 0x28, 0x10, 0x52, 0x08, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x12, 0x12, 0x0a,
	0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x08, 0x52, 0x04, 0x62, 0x6f, 0x6f,
	0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x0e, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x79, 0x74,
	0x65, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x42,
	0x3a, 0x42, 0x0c, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50,
	0x01, 0x5a, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x65,
	0x72, 0x6e, 0x65, 0x73, 0x74, 0x2f, 0x61, 0x72, 0x72, 0x6f, 0x77, 0x33, 0x2f, 0x67, 0x65, 0x6e,
	0x2f, 0x67, 0x6f, 0x2f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_samples_samples_proto_rawDescOnce sync.Once
	file_samples_samples_proto_rawDescData = file_samples_samples_proto_rawDesc
)

func file_samples_samples_proto_rawDescGZIP() []byte {
	file_samples_samples_proto_rawDescOnce.Do(func() {
		file_samples_samples_proto_rawDescData = protoimpl.X.CompressGZIP(file_samples_samples_proto_rawDescData)
	})
	return file_samples_samples_proto_rawDescData
}

var file_samples_samples_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_samples_samples_proto_goTypes = []interface{}{
	(*ScalarTypes)(nil),         // 0: ScalarTypes
	(*ScalarTypesOptional)(nil), // 1: ScalarTypesOptional
	(*ScalarTypesRepeated)(nil), // 2: ScalarTypesRepeated
}
var file_samples_samples_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_samples_samples_proto_init() }
func file_samples_samples_proto_init() {
	if File_samples_samples_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_samples_samples_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScalarTypes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_samples_samples_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScalarTypesOptional); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_samples_samples_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScalarTypesRepeated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_samples_samples_proto_msgTypes[1].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_samples_samples_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_samples_samples_proto_goTypes,
		DependencyIndexes: file_samples_samples_proto_depIdxs,
		MessageInfos:      file_samples_samples_proto_msgTypes,
	}.Build()
	File_samples_samples_proto = out.File
	file_samples_samples_proto_rawDesc = nil
	file_samples_samples_proto_goTypes = nil
	file_samples_samples_proto_depIdxs = nil
}
