// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: samples/samples.proto

package samples

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ScalarTypes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Double   float64 `protobuf:"fixed64,1,opt,name=double,proto3" json:"double,omitempty"`
	Float    float32 `protobuf:"fixed32,2,opt,name=float,proto3" json:"float,omitempty"`
	Int32    int32   `protobuf:"varint,3,opt,name=int32,proto3" json:"int32,omitempty"`
	Int64    int64   `protobuf:"varint,4,opt,name=int64,proto3" json:"int64,omitempty"`
	Uint32   uint32  `protobuf:"varint,5,opt,name=uint32,proto3" json:"uint32,omitempty"`
	Uint64   uint64  `protobuf:"varint,6,opt,name=uint64,proto3" json:"uint64,omitempty"`
	Sint32   int32   `protobuf:"zigzag32,7,opt,name=sint32,proto3" json:"sint32,omitempty"`
	Sint64   int64   `protobuf:"zigzag64,8,opt,name=sint64,proto3" json:"sint64,omitempty"`
	Fixed32  uint32  `protobuf:"fixed32,9,opt,name=fixed32,proto3" json:"fixed32,omitempty"`
	Fixed64  uint64  `protobuf:"fixed64,10,opt,name=fixed64,proto3" json:"fixed64,omitempty"`
	Sfixed32 int32   `protobuf:"fixed32,11,opt,name=sfixed32,proto3" json:"sfixed32,omitempty"`
	Sfixed64 int64   `protobuf:"fixed64,12,opt,name=sfixed64,proto3" json:"sfixed64,omitempty"`
	Bool     bool    `protobuf:"varint,13,opt,name=bool,proto3" json:"bool,omitempty"`
	String_  string  `protobuf:"bytes,14,opt,name=string,proto3" json:"string,omitempty"`
	Bytes    []byte  `protobuf:"bytes,15,opt,name=bytes,proto3" json:"bytes,omitempty"`
}

func (x *ScalarTypes) Reset() {
	*x = ScalarTypes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_samples_samples_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScalarTypes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScalarTypes) ProtoMessage() {}

func (x *ScalarTypes) ProtoReflect() protoreflect.Message {
	mi := &file_samples_samples_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScalarTypes.ProtoReflect.Descriptor instead.
func (*ScalarTypes) Descriptor() ([]byte, []int) {
	return file_samples_samples_proto_rawDescGZIP(), []int{0}
}

func (x *ScalarTypes) GetDouble() float64 {
	if x != nil {
		return x.Double
	}
	return 0
}

func (x *ScalarTypes) GetFloat() float32 {
	if x != nil {
		return x.Float
	}
	return 0
}

func (x *ScalarTypes) GetInt32() int32 {
	if x != nil {
		return x.Int32
	}
	return 0
}

func (x *ScalarTypes) GetInt64() int64 {
	if x != nil {
		return x.Int64
	}
	return 0
}

func (x *ScalarTypes) GetUint32() uint32 {
	if x != nil {
		return x.Uint32
	}
	return 0
}

func (x *ScalarTypes) GetUint64() uint64 {
	if x != nil {
		return x.Uint64
	}
	return 0
}

func (x *ScalarTypes) GetSint32() int32 {
	if x != nil {
		return x.Sint32
	}
	return 0
}

func (x *ScalarTypes) GetSint64() int64 {
	if x != nil {
		return x.Sint64
	}
	return 0
}

func (x *ScalarTypes) GetFixed32() uint32 {
	if x != nil {
		return x.Fixed32
	}
	return 0
}

func (x *ScalarTypes) GetFixed64() uint64 {
	if x != nil {
		return x.Fixed64
	}
	return 0
}

func (x *ScalarTypes) GetSfixed32() int32 {
	if x != nil {
		return x.Sfixed32
	}
	return 0
}

func (x *ScalarTypes) GetSfixed64() int64 {
	if x != nil {
		return x.Sfixed64
	}
	return 0
}

func (x *ScalarTypes) GetBool() bool {
	if x != nil {
		return x.Bool
	}
	return false
}

func (x *ScalarTypes) GetString_() string {
	if x != nil {
		return x.String_
	}
	return ""
}

func (x *ScalarTypes) GetBytes() []byte {
	if x != nil {
		return x.Bytes
	}
	return nil
}

type ScalarTypesOptional struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Double   *float64 `protobuf:"fixed64,1,opt,name=double,proto3,oneof" json:"double,omitempty"`
	Float    *float32 `protobuf:"fixed32,2,opt,name=float,proto3,oneof" json:"float,omitempty"`
	Int32    *int32   `protobuf:"varint,3,opt,name=int32,proto3,oneof" json:"int32,omitempty"`
	Int64    *int64   `protobuf:"varint,4,opt,name=int64,proto3,oneof" json:"int64,omitempty"`
	Uint32   *uint32  `protobuf:"varint,5,opt,name=uint32,proto3,oneof" json:"uint32,omitempty"`
	Uint64   *uint64  `protobuf:"varint,6,opt,name=uint64,proto3,oneof" json:"uint64,omitempty"`
	Sint32   *int32   `protobuf:"zigzag32,7,opt,name=sint32,proto3,oneof" json:"sint32,omitempty"`
	Sint64   *int64   `protobuf:"zigzag64,8,opt,name=sint64,proto3,oneof" json:"sint64,omitempty"`
	Fixed32  *uint32  `protobuf:"fixed32,9,opt,name=fixed32,proto3,oneof" json:"fixed32,omitempty"`
	Fixed64  *uint64  `protobuf:"fixed64,10,opt,name=fixed64,proto3,oneof" json:"fixed64,omitempty"`
	Sfixed32 *int32   `protobuf:"fixed32,11,opt,name=sfixed32,proto3,oneof" json:"sfixed32,omitempty"`
	Sfixed64 *int64   `protobuf:"fixed64,12,opt,name=sfixed64,proto3,oneof" json:"sfixed64,omitempty"`
	Bool     *bool    `protobuf:"varint,13,opt,name=bool,proto3,oneof" json:"bool,omitempty"`
	String_  *string  `protobuf:"bytes,14,opt,name=string,proto3,oneof" json:"string,omitempty"`
	Bytes    []byte   `protobuf:"bytes,15,opt,name=bytes,proto3,oneof" json:"bytes,omitempty"`
}

func (x *ScalarTypesOptional) Reset() {
	*x = ScalarTypesOptional{}
	if protoimpl.UnsafeEnabled {
		mi := &file_samples_samples_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScalarTypesOptional) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScalarTypesOptional) ProtoMessage() {}

func (x *ScalarTypesOptional) ProtoReflect() protoreflect.Message {
	mi := &file_samples_samples_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScalarTypesOptional.ProtoReflect.Descriptor instead.
func (*ScalarTypesOptional) Descriptor() ([]byte, []int) {
	return file_samples_samples_proto_rawDescGZIP(), []int{1}
}

func (x *ScalarTypesOptional) GetDouble() float64 {
	if x != nil && x.Double != nil {
		return *x.Double
	}
	return 0
}

func (x *ScalarTypesOptional) GetFloat() float32 {
	if x != nil && x.Float != nil {
		return *x.Float
	}
	return 0
}

func (x *ScalarTypesOptional) GetInt32() int32 {
	if x != nil && x.Int32 != nil {
		return *x.Int32
	}
	return 0
}

func (x *ScalarTypesOptional) GetInt64() int64 {
	if x != nil && x.Int64 != nil {
		return *x.Int64
	}
	return 0
}

func (x *ScalarTypesOptional) GetUint32() uint32 {
	if x != nil && x.Uint32 != nil {
		return *x.Uint32
	}
	return 0
}

func (x *ScalarTypesOptional) GetUint64() uint64 {
	if x != nil && x.Uint64 != nil {
		return *x.Uint64
	}
	return 0
}

func (x *ScalarTypesOptional) GetSint32() int32 {
	if x != nil && x.Sint32 != nil {
		return *x.Sint32
	}
	return 0
}

func (x *ScalarTypesOptional) GetSint64() int64 {
	if x != nil && x.Sint64 != nil {
		return *x.Sint64
	}
	return 0
}

func (x *ScalarTypesOptional) GetFixed32() uint32 {
	if x != nil && x.Fixed32 != nil {
		return *x.Fixed32
	}
	return 0
}

func (x *ScalarTypesOptional) GetFixed64() uint64 {
	if x != nil && x.Fixed64 != nil {
		return *x.Fixed64
	}
	return 0
}

func (x *ScalarTypesOptional) GetSfixed32() int32 {
	if x != nil && x.Sfixed32 != nil {
		return *x.Sfixed32
	}
	return 0
}

func (x *ScalarTypesOptional) GetSfixed64() int64 {
	if x != nil && x.Sfixed64 != nil {
		return *x.Sfixed64
	}
	return 0
}

func (x *ScalarTypesOptional) GetBool() bool {
	if x != nil && x.Bool != nil {
		return *x.Bool
	}
	return false
}

func (x *ScalarTypesOptional) GetString_() string {
	if x != nil && x.String_ != nil {
		return *x.String_
	}
	return ""
}

func (x *ScalarTypesOptional) GetBytes() []byte {
	if x != nil {
		return x.Bytes
	}
	return nil
}

type ScalarTypesRepeated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Double   []float64 `protobuf:"fixed64,1,rep,packed,name=double,proto3" json:"double,omitempty"`
	Float    []float32 `protobuf:"fixed32,2,rep,packed,name=float,proto3" json:"float,omitempty"`
	Int32    []int32   `protobuf:"varint,3,rep,packed,name=int32,proto3" json:"int32,omitempty"`
	Int64    []int64   `protobuf:"varint,4,rep,packed,name=int64,proto3" json:"int64,omitempty"`
	Uint32   []uint32  `protobuf:"varint,5,rep,packed,name=uint32,proto3" json:"uint32,omitempty"`
	Uint64   []uint64  `protobuf:"varint,6,rep,packed,name=uint64,proto3" json:"uint64,omitempty"`
	Sint32   []int32   `protobuf:"zigzag32,7,rep,packed,name=sint32,proto3" json:"sint32,omitempty"`
	Sint64   []int64   `protobuf:"zigzag64,8,rep,packed,name=sint64,proto3" json:"sint64,omitempty"`
	Fixed32  []uint32  `protobuf:"fixed32,9,rep,packed,name=fixed32,proto3" json:"fixed32,omitempty"`
	Fixed64  []uint64  `protobuf:"fixed64,10,rep,packed,name=fixed64,proto3" json:"fixed64,omitempty"`
	Sfixed32 []int32   `protobuf:"fixed32,11,rep,packed,name=sfixed32,proto3" json:"sfixed32,omitempty"`
	Sfixed64 []int64   `protobuf:"fixed64,12,rep,packed,name=sfixed64,proto3" json:"sfixed64,omitempty"`
	Bool     []bool    `protobuf:"varint,13,rep,packed,name=bool,proto3" json:"bool,omitempty"`
	String_  []string  `protobuf:"bytes,14,rep,name=string,proto3" json:"string,omitempty"`
	Bytes    [][]byte  `protobuf:"bytes,15,rep,name=bytes,proto3" json:"bytes,omitempty"`
}

func (x *ScalarTypesRepeated) Reset() {
	*x = ScalarTypesRepeated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_samples_samples_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScalarTypesRepeated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScalarTypesRepeated) ProtoMessage() {}

func (x *ScalarTypesRepeated) ProtoReflect() protoreflect.Message {
	mi := &file_samples_samples_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScalarTypesRepeated.ProtoReflect.Descriptor instead.
func (*ScalarTypesRepeated) Descriptor() ([]byte, []int) {
	return file_samples_samples_proto_rawDescGZIP(), []int{2}
}

func (x *ScalarTypesRepeated) GetDouble() []float64 {
	if x != nil {
		return x.Double
	}
	return nil
}

func (x *ScalarTypesRepeated) GetFloat() []float32 {
	if x != nil {
		return x.Float
	}
	return nil
}

func (x *ScalarTypesRepeated) GetInt32() []int32 {
	if x != nil {
		return x.Int32
	}
	return nil
}

func (x *ScalarTypesRepeated) GetInt64() []int64 {
	if x != nil {
		return x.Int64
	}
	return nil
}

func (x *ScalarTypesRepeated) GetUint32() []uint32 {
	if x != nil {
		return x.Uint32
	}
	return nil
}

func (x *ScalarTypesRepeated) GetUint64() []uint64 {
	if x != nil {
		return x.Uint64
	}
	return nil
}

func (x *ScalarTypesRepeated) GetSint32() []int32 {
	if x != nil {
		return x.Sint32
	}
	return nil
}

func (x *ScalarTypesRepeated) GetSint64() []int64 {
	if x != nil {
		return x.Sint64
	}
	return nil
}

func (x *ScalarTypesRepeated) GetFixed32() []uint32 {
	if x != nil {
		return x.Fixed32
	}
	return nil
}

func (x *ScalarTypesRepeated) GetFixed64() []uint64 {
	if x != nil {
		return x.Fixed64
	}
	return nil
}

func (x *ScalarTypesRepeated) GetSfixed32() []int32 {
	if x != nil {
		return x.Sfixed32
	}
	return nil
}

func (x *ScalarTypesRepeated) GetSfixed64() []int64 {
	if x != nil {
		return x.Sfixed64
	}
	return nil
}

func (x *ScalarTypesRepeated) GetBool() []bool {
	if x != nil {
		return x.Bool
	}
	return nil
}

func (x *ScalarTypesRepeated) GetString_() []string {
	if x != nil {
		return x.String_
	}
	return nil
}

func (x *ScalarTypesRepeated) GetBytes() [][]byte {
	if x != nil {
		return x.Bytes
	}
	return nil
}

type ScalarTypesMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Labels map[string]string `protobuf:"bytes,1,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ScalarTypesMap) Reset() {
	*x = ScalarTypesMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_samples_samples_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScalarTypesMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScalarTypesMap) ProtoMessage() {}

func (x *ScalarTypesMap) ProtoReflect() protoreflect.Message {
	mi := &file_samples_samples_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScalarTypesMap.ProtoReflect.Descriptor instead.
func (*ScalarTypesMap) Descriptor() ([]byte, []int) {
	return file_samples_samples_proto_rawDescGZIP(), []int{3}
}

func (x *ScalarTypesMap) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type Nested struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NestedScalar         *ScalarTypes   `protobuf:"bytes,1,opt,name=nested_scalar,json=nestedScalar,proto3" json:"nested_scalar,omitempty"`
	NestedRepeatedScalar []*ScalarTypes `protobuf:"bytes,2,rep,name=nested_repeated_scalar,json=nestedRepeatedScalar,proto3" json:"nested_repeated_scalar,omitempty"`
	Deep                 *One           `protobuf:"bytes,3,opt,name=deep,proto3" json:"deep,omitempty"`
}

func (x *Nested) Reset() {
	*x = Nested{}
	if protoimpl.UnsafeEnabled {
		mi := &file_samples_samples_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Nested) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Nested) ProtoMessage() {}

func (x *Nested) ProtoReflect() protoreflect.Message {
	mi := &file_samples_samples_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Nested.ProtoReflect.Descriptor instead.
func (*Nested) Descriptor() ([]byte, []int) {
	return file_samples_samples_proto_rawDescGZIP(), []int{4}
}

func (x *Nested) GetNestedScalar() *ScalarTypes {
	if x != nil {
		return x.NestedScalar
	}
	return nil
}

func (x *Nested) GetNestedRepeatedScalar() []*ScalarTypes {
	if x != nil {
		return x.NestedRepeatedScalar
	}
	return nil
}

func (x *Nested) GetDeep() *One {
	if x != nil {
		return x.Deep
	}
	return nil
}

type One struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Two *Two `protobuf:"bytes,1,opt,name=two,proto3" json:"two,omitempty"`
}

func (x *One) Reset() {
	*x = One{}
	if protoimpl.UnsafeEnabled {
		mi := &file_samples_samples_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *One) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*One) ProtoMessage() {}

func (x *One) ProtoReflect() protoreflect.Message {
	mi := &file_samples_samples_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use One.ProtoReflect.Descriptor instead.
func (*One) Descriptor() ([]byte, []int) {
	return file_samples_samples_proto_rawDescGZIP(), []int{5}
}

func (x *One) GetTwo() *Two {
	if x != nil {
		return x.Two
	}
	return nil
}

type Two struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Three *Three `protobuf:"bytes,1,opt,name=three,proto3" json:"three,omitempty"`
}

func (x *Two) Reset() {
	*x = Two{}
	if protoimpl.UnsafeEnabled {
		mi := &file_samples_samples_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Two) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Two) ProtoMessage() {}

func (x *Two) ProtoReflect() protoreflect.Message {
	mi := &file_samples_samples_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Two.ProtoReflect.Descriptor instead.
func (*Two) Descriptor() ([]byte, []int) {
	return file_samples_samples_proto_rawDescGZIP(), []int{6}
}

func (x *Two) GetThree() *Three {
	if x != nil {
		return x.Three
	}
	return nil
}

type Three struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value uint64 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Three) Reset() {
	*x = Three{}
	if protoimpl.UnsafeEnabled {
		mi := &file_samples_samples_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Three) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Three) ProtoMessage() {}

func (x *Three) ProtoReflect() protoreflect.Message {
	mi := &file_samples_samples_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Three.ProtoReflect.Descriptor instead.
func (*Three) Descriptor() ([]byte, []int) {
	return file_samples_samples_proto_rawDescGZIP(), []int{7}
}

func (x *Three) GetValue() uint64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type Cyclic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	One    *One    `protobuf:"bytes,1,opt,name=one,proto3" json:"one,omitempty"`
	Cylcic *Cyclic `protobuf:"bytes,2,opt,name=cylcic,proto3" json:"cylcic,omitempty"`
}

func (x *Cyclic) Reset() {
	*x = Cyclic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_samples_samples_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cyclic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cyclic) ProtoMessage() {}

func (x *Cyclic) ProtoReflect() protoreflect.Message {
	mi := &file_samples_samples_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cyclic.ProtoReflect.Descriptor instead.
func (*Cyclic) Descriptor() ([]byte, []int) {
	return file_samples_samples_proto_rawDescGZIP(), []int{8}
}

func (x *Cyclic) GetOne() *One {
	if x != nil {
		return x.One
	}
	return nil
}

func (x *Cyclic) GetCylcic() *Cyclic {
	if x != nil {
		return x.Cylcic
	}
	return nil
}

type Known struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts          *timestamppb.Timestamp   `protobuf:"bytes,1,opt,name=ts,proto3" json:"ts,omitempty"`
	Duration    *durationpb.Duration     `protobuf:"bytes,2,opt,name=duration,proto3" json:"duration,omitempty"`
	TsRep       []*timestamppb.Timestamp `protobuf:"bytes,3,rep,name=ts_rep,json=tsRep,proto3" json:"ts_rep,omitempty"`
	DurationRep []*durationpb.Duration   `protobuf:"bytes,4,rep,name=duration_rep,json=durationRep,proto3" json:"duration_rep,omitempty"`
}

func (x *Known) Reset() {
	*x = Known{}
	if protoimpl.UnsafeEnabled {
		mi := &file_samples_samples_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Known) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Known) ProtoMessage() {}

func (x *Known) ProtoReflect() protoreflect.Message {
	mi := &file_samples_samples_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Known.ProtoReflect.Descriptor instead.
func (*Known) Descriptor() ([]byte, []int) {
	return file_samples_samples_proto_rawDescGZIP(), []int{9}
}

func (x *Known) GetTs() *timestamppb.Timestamp {
	if x != nil {
		return x.Ts
	}
	return nil
}

func (x *Known) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

func (x *Known) GetTsRep() []*timestamppb.Timestamp {
	if x != nil {
		return x.TsRep
	}
	return nil
}

func (x *Known) GetDurationRep() []*durationpb.Duration {
	if x != nil {
		return x.DurationRep
	}
	return nil
}

type OneOfScala struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//
	//	*OneOfScala_Double
	//	*OneOfScala_Float
	//	*OneOfScala_Int32
	//	*OneOfScala_Int64
	//	*OneOfScala_Uint32
	//	*OneOfScala_Uint64
	//	*OneOfScala_Sint32
	//	*OneOfScala_Sint64
	//	*OneOfScala_Fixed32
	//	*OneOfScala_Fixed64
	//	*OneOfScala_Sfixed32
	//	*OneOfScala_Sfixed64
	//	*OneOfScala_Bool
	//	*OneOfScala_String_
	//	*OneOfScala_Bytes
	Value isOneOfScala_Value `protobuf_oneof:"value"`
	// Types that are assignable to Nested:
	//
	//	*OneOfScala_One
	Nested isOneOfScala_Nested `protobuf_oneof:"nested"`
}

func (x *OneOfScala) Reset() {
	*x = OneOfScala{}
	if protoimpl.UnsafeEnabled {
		mi := &file_samples_samples_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OneOfScala) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OneOfScala) ProtoMessage() {}

func (x *OneOfScala) ProtoReflect() protoreflect.Message {
	mi := &file_samples_samples_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OneOfScala.ProtoReflect.Descriptor instead.
func (*OneOfScala) Descriptor() ([]byte, []int) {
	return file_samples_samples_proto_rawDescGZIP(), []int{10}
}

func (m *OneOfScala) GetValue() isOneOfScala_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *OneOfScala) GetDouble() float64 {
	if x, ok := x.GetValue().(*OneOfScala_Double); ok {
		return x.Double
	}
	return 0
}

func (x *OneOfScala) GetFloat() float32 {
	if x, ok := x.GetValue().(*OneOfScala_Float); ok {
		return x.Float
	}
	return 0
}

func (x *OneOfScala) GetInt32() int32 {
	if x, ok := x.GetValue().(*OneOfScala_Int32); ok {
		return x.Int32
	}
	return 0
}

func (x *OneOfScala) GetInt64() int64 {
	if x, ok := x.GetValue().(*OneOfScala_Int64); ok {
		return x.Int64
	}
	return 0
}

func (x *OneOfScala) GetUint32() uint32 {
	if x, ok := x.GetValue().(*OneOfScala_Uint32); ok {
		return x.Uint32
	}
	return 0
}

func (x *OneOfScala) GetUint64() uint64 {
	if x, ok := x.GetValue().(*OneOfScala_Uint64); ok {
		return x.Uint64
	}
	return 0
}

func (x *OneOfScala) GetSint32() int32 {
	if x, ok := x.GetValue().(*OneOfScala_Sint32); ok {
		return x.Sint32
	}
	return 0
}

func (x *OneOfScala) GetSint64() int64 {
	if x, ok := x.GetValue().(*OneOfScala_Sint64); ok {
		return x.Sint64
	}
	return 0
}

func (x *OneOfScala) GetFixed32() uint32 {
	if x, ok := x.GetValue().(*OneOfScala_Fixed32); ok {
		return x.Fixed32
	}
	return 0
}

func (x *OneOfScala) GetFixed64() uint64 {
	if x, ok := x.GetValue().(*OneOfScala_Fixed64); ok {
		return x.Fixed64
	}
	return 0
}

func (x *OneOfScala) GetSfixed32() int32 {
	if x, ok := x.GetValue().(*OneOfScala_Sfixed32); ok {
		return x.Sfixed32
	}
	return 0
}

func (x *OneOfScala) GetSfixed64() int64 {
	if x, ok := x.GetValue().(*OneOfScala_Sfixed64); ok {
		return x.Sfixed64
	}
	return 0
}

func (x *OneOfScala) GetBool() bool {
	if x, ok := x.GetValue().(*OneOfScala_Bool); ok {
		return x.Bool
	}
	return false
}

func (x *OneOfScala) GetString_() string {
	if x, ok := x.GetValue().(*OneOfScala_String_); ok {
		return x.String_
	}
	return ""
}

func (x *OneOfScala) GetBytes() []byte {
	if x, ok := x.GetValue().(*OneOfScala_Bytes); ok {
		return x.Bytes
	}
	return nil
}

func (m *OneOfScala) GetNested() isOneOfScala_Nested {
	if m != nil {
		return m.Nested
	}
	return nil
}

func (x *OneOfScala) GetOne() *One {
	if x, ok := x.GetNested().(*OneOfScala_One); ok {
		return x.One
	}
	return nil
}

type isOneOfScala_Value interface {
	isOneOfScala_Value()
}

type OneOfScala_Double struct {
	Double float64 `protobuf:"fixed64,1,opt,name=double,proto3,oneof"`
}

type OneOfScala_Float struct {
	Float float32 `protobuf:"fixed32,2,opt,name=float,proto3,oneof"`
}

type OneOfScala_Int32 struct {
	Int32 int32 `protobuf:"varint,3,opt,name=int32,proto3,oneof"`
}

type OneOfScala_Int64 struct {
	Int64 int64 `protobuf:"varint,4,opt,name=int64,proto3,oneof"`
}

type OneOfScala_Uint32 struct {
	Uint32 uint32 `protobuf:"varint,5,opt,name=uint32,proto3,oneof"`
}

type OneOfScala_Uint64 struct {
	Uint64 uint64 `protobuf:"varint,6,opt,name=uint64,proto3,oneof"`
}

type OneOfScala_Sint32 struct {
	Sint32 int32 `protobuf:"zigzag32,7,opt,name=sint32,proto3,oneof"`
}

type OneOfScala_Sint64 struct {
	Sint64 int64 `protobuf:"zigzag64,8,opt,name=sint64,proto3,oneof"`
}

type OneOfScala_Fixed32 struct {
	Fixed32 uint32 `protobuf:"fixed32,9,opt,name=fixed32,proto3,oneof"`
}

type OneOfScala_Fixed64 struct {
	Fixed64 uint64 `protobuf:"fixed64,10,opt,name=fixed64,proto3,oneof"`
}

type OneOfScala_Sfixed32 struct {
	Sfixed32 int32 `protobuf:"fixed32,11,opt,name=sfixed32,proto3,oneof"`
}

type OneOfScala_Sfixed64 struct {
	Sfixed64 int64 `protobuf:"fixed64,12,opt,name=sfixed64,proto3,oneof"`
}

type OneOfScala_Bool struct {
	Bool bool `protobuf:"varint,13,opt,name=bool,proto3,oneof"`
}

type OneOfScala_String_ struct {
	String_ string `protobuf:"bytes,14,opt,name=string,proto3,oneof"`
}

type OneOfScala_Bytes struct {
	Bytes []byte `protobuf:"bytes,15,opt,name=bytes,proto3,oneof"`
}

func (*OneOfScala_Double) isOneOfScala_Value() {}

func (*OneOfScala_Float) isOneOfScala_Value() {}

func (*OneOfScala_Int32) isOneOfScala_Value() {}

func (*OneOfScala_Int64) isOneOfScala_Value() {}

func (*OneOfScala_Uint32) isOneOfScala_Value() {}

func (*OneOfScala_Uint64) isOneOfScala_Value() {}

func (*OneOfScala_Sint32) isOneOfScala_Value() {}

func (*OneOfScala_Sint64) isOneOfScala_Value() {}

func (*OneOfScala_Fixed32) isOneOfScala_Value() {}

func (*OneOfScala_Fixed64) isOneOfScala_Value() {}

func (*OneOfScala_Sfixed32) isOneOfScala_Value() {}

func (*OneOfScala_Sfixed64) isOneOfScala_Value() {}

func (*OneOfScala_Bool) isOneOfScala_Value() {}

func (*OneOfScala_String_) isOneOfScala_Value() {}

func (*OneOfScala_Bytes) isOneOfScala_Value() {}

type isOneOfScala_Nested interface {
	isOneOfScala_Nested()
}

type OneOfScala_One struct {
	One *One `protobuf:"bytes,16,opt,name=one,proto3,oneof"`
}

func (*OneOfScala_One) isOneOfScala_Nested() {}

type SimpleOneOf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//
	//	*SimpleOneOf_K
	//	*SimpleOneOf_V
	//	*SimpleOneOf_One
	Value isSimpleOneOf_Value `protobuf_oneof:"value"`
}

func (x *SimpleOneOf) Reset() {
	*x = SimpleOneOf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_samples_samples_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SimpleOneOf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleOneOf) ProtoMessage() {}

func (x *SimpleOneOf) ProtoReflect() protoreflect.Message {
	mi := &file_samples_samples_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimpleOneOf.ProtoReflect.Descriptor instead.
func (*SimpleOneOf) Descriptor() ([]byte, []int) {
	return file_samples_samples_proto_rawDescGZIP(), []int{11}
}

func (m *SimpleOneOf) GetValue() isSimpleOneOf_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *SimpleOneOf) GetK() string {
	if x, ok := x.GetValue().(*SimpleOneOf_K); ok {
		return x.K
	}
	return ""
}

func (x *SimpleOneOf) GetV() string {
	if x, ok := x.GetValue().(*SimpleOneOf_V); ok {
		return x.V
	}
	return ""
}

func (x *SimpleOneOf) GetOne() *One {
	if x, ok := x.GetValue().(*SimpleOneOf_One); ok {
		return x.One
	}
	return nil
}

type isSimpleOneOf_Value interface {
	isSimpleOneOf_Value()
}

type SimpleOneOf_K struct {
	K string `protobuf:"bytes,1,opt,name=k,proto3,oneof"`
}

type SimpleOneOf_V struct {
	V string `protobuf:"bytes,2,opt,name=v,proto3,oneof"`
}

type SimpleOneOf_One struct {
	One *One `protobuf:"bytes,3,opt,name=one,proto3,oneof"`
}

func (*SimpleOneOf_K) isSimpleOneOf_Value() {}

func (*SimpleOneOf_V) isSimpleOneOf_Value() {}

func (*SimpleOneOf_One) isSimpleOneOf_Value() {}

var File_samples_samples_proto protoreflect.FileDescriptor

var file_samples_samples_proto_rawDesc = []byte{
	0x0a, 0x15, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf5, 0x02, 0x0a, 0x0b, 0x53, 0x63, 0x61,
	0x6c, 0x61, 0x72, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x75, 0x62,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x05, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x14, 0x0a, 0x05,
	0x69, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x69, 0x6e, 0x74,
	0x36, 0x34, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x69,
	0x6e, 0x74, 0x36, 0x34, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x69, 0x6e, 0x74,
	0x36, 0x34, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x11, 0x52, 0x06, 0x73, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69,
	0x6e, 0x74, 0x36, 0x34, 0x18, 0x08, 0x20, 0x01, 0x28, 0x12, 0x52, 0x06, 0x73, 0x69, 0x6e, 0x74,
	0x36, 0x34, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x07, 0x52, 0x07, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x12, 0x18, 0x0a, 0x07,
	0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x06, 0x52, 0x07, 0x66,
	0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64,
	0x33, 0x32, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0f, 0x52, 0x08, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64,
	0x33, 0x32, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x10, 0x52, 0x08, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x12, 0x12,
	0x0a, 0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x62, 0x6f,
	0x6f, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x79,
	0x74, 0x65, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73,
	0x22, 0xed, 0x04, 0x0a, 0x13, 0x53, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x54, 0x79, 0x70, 0x65, 0x73,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x12, 0x1b, 0x0a, 0x06, 0x64, 0x6f, 0x75, 0x62,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x48, 0x00, 0x52, 0x06, 0x64, 0x6f, 0x75, 0x62,
	0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x02, 0x48, 0x01, 0x52, 0x05, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x88, 0x01, 0x01,
	0x12, 0x19, 0x0a, 0x05, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x02, 0x52, 0x05, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x69,
	0x6e, 0x74, 0x36, 0x34, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x48, 0x03, 0x52, 0x05, 0x69, 0x6e,
	0x74, 0x36, 0x34, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x04, 0x52, 0x06, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32,
	0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x75, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x04, 0x48, 0x05, 0x52, 0x06, 0x75, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x88, 0x01, 0x01,
	0x12, 0x1b, 0x0a, 0x06, 0x73, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x07, 0x20, 0x01, 0x28, 0x11,
	0x48, 0x06, 0x52, 0x06, 0x73, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a,
	0x06, 0x73, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x08, 0x20, 0x01, 0x28, 0x12, 0x48, 0x07, 0x52,
	0x06, 0x73, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x66, 0x69,
	0x78, 0x65, 0x64, 0x33, 0x32, 0x18, 0x09, 0x20, 0x01, 0x28, 0x07, 0x48, 0x08, 0x52, 0x07, 0x66,
	0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x66, 0x69, 0x78,
	0x65, 0x64, 0x36, 0x34, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x06, 0x48, 0x09, 0x52, 0x07, 0x66, 0x69,
	0x78, 0x65, 0x64, 0x36, 0x34, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x73, 0x66, 0x69, 0x78,
	0x65, 0x64, 0x33, 0x32, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0f, 0x48, 0x0a, 0x52, 0x08, 0x73, 0x66,
	0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x73, 0x66, 0x69,
	0x78, 0x65, 0x64, 0x36, 0x34, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x10, 0x48, 0x0b, 0x52, 0x08, 0x73,
	0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x62, 0x6f,
	0x6f, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x48, 0x0c, 0x52, 0x04, 0x62, 0x6f, 0x6f, 0x6c,
	0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x0d, 0x52, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x88, 0x01, 0x01,
	0x12, 0x19, 0x0a, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0c, 0x48,
	0x0e, 0x52, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f,
	0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x66, 0x6c, 0x6f, 0x61, 0x74,
	0x42, 0x08, 0x0a, 0x06, 0x5f, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x69,
	0x6e, 0x74, 0x36, 0x34, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x42,
	0x09, 0x0a, 0x07, 0x5f, 0x75, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73,
	0x69, 0x6e, 0x74, 0x33, 0x32, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x69, 0x6e, 0x74, 0x36, 0x34,
	0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x42, 0x0a, 0x0a, 0x08,
	0x5f, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x73, 0x66, 0x69,
	0x78, 0x65, 0x64, 0x33, 0x32, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64,
	0x36, 0x34, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x62, 0x6f, 0x6f, 0x6c, 0x42, 0x09, 0x0a, 0x07, 0x5f,
	0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73,
	0x22, 0xfd, 0x02, 0x0a, 0x13, 0x53, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x54, 0x79, 0x70, 0x65, 0x73,
	0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x75, 0x62,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x01, 0x52, 0x06, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x02, 0x52,
	0x05, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x14, 0x0a, 0x05,
	0x69, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x04, 0x20, 0x03, 0x28, 0x03, 0x52, 0x05, 0x69, 0x6e, 0x74,
	0x36, 0x34, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0d, 0x52, 0x06, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x69,
	0x6e, 0x74, 0x36, 0x34, 0x18, 0x06, 0x20, 0x03, 0x28, 0x04, 0x52, 0x06, 0x75, 0x69, 0x6e, 0x74,
	0x36, 0x34, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x11, 0x52, 0x06, 0x73, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69,
	0x6e, 0x74, 0x36, 0x34, 0x18, 0x08, 0x20, 0x03, 0x28, 0x12, 0x52, 0x06, 0x73, 0x69, 0x6e, 0x74,
	0x36, 0x34, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x18, 0x09, 0x20,
	0x03, 0x28, 0x07, 0x52, 0x07, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x12, 0x18, 0x0a, 0x07,
	0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x06, 0x52, 0x07, 0x66,
	0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64,
	0x33, 0x32, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0f, 0x52, 0x08, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64,
	0x33, 0x32, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x18, 0x0c,
	0x20, 0x03, 0x28, 0x10, 0x52, 0x08, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x12, 0x12,
	0x0a, 0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x08, 0x52, 0x04, 0x62, 0x6f,
	0x6f, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x0e, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x79,
	0x74, 0x65, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73,
	0x22, 0x80, 0x01, 0x0a, 0x0e, 0x53, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x54, 0x79, 0x70, 0x65, 0x73,
	0x4d, 0x61, 0x70, 0x12, 0x33, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x53, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x73, 0x4d, 0x61, 0x70, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x99, 0x01, 0x0a, 0x06, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x12, 0x31,
	0x0a, 0x0d, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x53, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x73, 0x52, 0x0c, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x53, 0x63, 0x61, 0x6c, 0x61,
	0x72, 0x12, 0x42, 0x0a, 0x16, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x70, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x53, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52,
	0x14, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x53,
	0x63, 0x61, 0x6c, 0x61, 0x72, 0x12, 0x18, 0x0a, 0x04, 0x64, 0x65, 0x65, 0x70, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x04, 0x2e, 0x4f, 0x6e, 0x65, 0x52, 0x04, 0x64, 0x65, 0x65, 0x70, 0x22,
	0x1d, 0x0a, 0x03, 0x4f, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x03, 0x74, 0x77, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x04, 0x2e, 0x54, 0x77, 0x6f, 0x52, 0x03, 0x74, 0x77, 0x6f, 0x22, 0x23,
	0x0a, 0x03, 0x54, 0x77, 0x6f, 0x12, 0x1c, 0x0a, 0x05, 0x74, 0x68, 0x72, 0x65, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x54, 0x68, 0x72, 0x65, 0x65, 0x52, 0x05, 0x74, 0x68,
	0x72, 0x65, 0x65, 0x22, 0x1d, 0x0a, 0x05, 0x54, 0x68, 0x72, 0x65, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x41, 0x0a, 0x06, 0x43, 0x79, 0x63, 0x6c, 0x69, 0x63, 0x12, 0x16, 0x0a, 0x03,
	0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x04, 0x2e, 0x4f, 0x6e, 0x65, 0x52,
	0x03, 0x6f, 0x6e, 0x65, 0x12, 0x1f, 0x0a, 0x06, 0x63, 0x79, 0x6c, 0x63, 0x69, 0x63, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x43, 0x79, 0x63, 0x6c, 0x69, 0x63, 0x52, 0x06, 0x63,
	0x79, 0x6c, 0x63, 0x69, 0x63, 0x22, 0xdb, 0x01, 0x0a, 0x05, 0x4b, 0x6e, 0x6f, 0x77, 0x6e, 0x12,
	0x2a, 0x0a, 0x02, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x02, 0x74, 0x73, 0x12, 0x35, 0x0a, 0x08, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x31, 0x0a, 0x06, 0x74, 0x73, 0x5f, 0x72, 0x65, 0x70, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05,
	0x74, 0x73, 0x52, 0x65, 0x70, 0x12, 0x3c, 0x0a, 0x0c, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x72, 0x65, 0x70, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x70, 0x22, 0xbf, 0x03, 0x0a, 0x0a, 0x4f, 0x6e, 0x65, 0x4f, 0x66, 0x53, 0x63, 0x61,
	0x6c, 0x61, 0x12, 0x18, 0x0a, 0x06, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x01, 0x48, 0x00, 0x52, 0x06, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x05,
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x48, 0x00, 0x52, 0x05, 0x66,
	0x6c, 0x6f, 0x61, 0x74, 0x12, 0x16, 0x0a, 0x05, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x05, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x16, 0x0a, 0x05,
	0x69, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x05, 0x69,
	0x6e, 0x74, 0x36, 0x34, 0x12, 0x18, 0x0a, 0x06, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x06, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x18,
	0x0a, 0x06, 0x75, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00,
	0x52, 0x06, 0x75, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x18, 0x0a, 0x06, 0x73, 0x69, 0x6e, 0x74,
	0x33, 0x32, 0x18, 0x07, 0x20, 0x01, 0x28, 0x11, 0x48, 0x00, 0x52, 0x06, 0x73, 0x69, 0x6e, 0x74,
	0x33, 0x32, 0x12, 0x18, 0x0a, 0x06, 0x73, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x12, 0x48, 0x00, 0x52, 0x06, 0x73, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x1a, 0x0a, 0x07,
	0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x18, 0x09, 0x20, 0x01, 0x28, 0x07, 0x48, 0x00, 0x52,
	0x07, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x12, 0x1a, 0x0a, 0x07, 0x66, 0x69, 0x78, 0x65,
	0x64, 0x36, 0x34, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x06, 0x48, 0x00, 0x52, 0x07, 0x66, 0x69, 0x78,
	0x65, 0x64, 0x36, 0x34, 0x12, 0x1c, 0x0a, 0x08, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0f, 0x48, 0x00, 0x52, 0x08, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64,
	0x33, 0x32, 0x12, 0x1c, 0x0a, 0x08, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x10, 0x48, 0x00, 0x52, 0x08, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34,
	0x12, 0x14, 0x0a, 0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00,
	0x52, 0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x12, 0x18, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x12, 0x16, 0x0a, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0c, 0x48,
	0x00, 0x52, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x03, 0x6f, 0x6e, 0x65, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x04, 0x2e, 0x4f, 0x6e, 0x65, 0x48, 0x01, 0x52, 0x03, 0x6f,
	0x6e, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x6e,
	0x65, 0x73, 0x74, 0x65, 0x64, 0x22, 0x50, 0x0a, 0x0b, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x4f,
	0x6e, 0x65, 0x4f, 0x66, 0x12, 0x0e, 0x0a, 0x01, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x01, 0x6b, 0x12, 0x0e, 0x0a, 0x01, 0x76, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x01, 0x76, 0x12, 0x18, 0x0a, 0x03, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x04, 0x2e, 0x4f, 0x6e, 0x65, 0x48, 0x00, 0x52, 0x03, 0x6f, 0x6e, 0x65, 0x42, 0x07,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x3a, 0x42, 0x0c, 0x53, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x65, 0x72, 0x6e, 0x65, 0x73, 0x74, 0x2f, 0x61, 0x72,
	0x72, 0x6f, 0x77, 0x33, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x73, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_samples_samples_proto_rawDescOnce sync.Once
	file_samples_samples_proto_rawDescData = file_samples_samples_proto_rawDesc
)

func file_samples_samples_proto_rawDescGZIP() []byte {
	file_samples_samples_proto_rawDescOnce.Do(func() {
		file_samples_samples_proto_rawDescData = protoimpl.X.CompressGZIP(file_samples_samples_proto_rawDescData)
	})
	return file_samples_samples_proto_rawDescData
}

var file_samples_samples_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_samples_samples_proto_goTypes = []interface{}{
	(*ScalarTypes)(nil),           // 0: ScalarTypes
	(*ScalarTypesOptional)(nil),   // 1: ScalarTypesOptional
	(*ScalarTypesRepeated)(nil),   // 2: ScalarTypesRepeated
	(*ScalarTypesMap)(nil),        // 3: ScalarTypesMap
	(*Nested)(nil),                // 4: Nested
	(*One)(nil),                   // 5: One
	(*Two)(nil),                   // 6: Two
	(*Three)(nil),                 // 7: Three
	(*Cyclic)(nil),                // 8: Cyclic
	(*Known)(nil),                 // 9: Known
	(*OneOfScala)(nil),            // 10: OneOfScala
	(*SimpleOneOf)(nil),           // 11: SimpleOneOf
	nil,                           // 12: ScalarTypesMap.LabelsEntry
	(*timestamppb.Timestamp)(nil), // 13: google.protobuf.Timestamp
	(*durationpb.Duration)(nil),   // 14: google.protobuf.Duration
}
var file_samples_samples_proto_depIdxs = []int32{
	12, // 0: ScalarTypesMap.labels:type_name -> ScalarTypesMap.LabelsEntry
	0,  // 1: Nested.nested_scalar:type_name -> ScalarTypes
	0,  // 2: Nested.nested_repeated_scalar:type_name -> ScalarTypes
	5,  // 3: Nested.deep:type_name -> One
	6,  // 4: One.two:type_name -> Two
	7,  // 5: Two.three:type_name -> Three
	5,  // 6: Cyclic.one:type_name -> One
	8,  // 7: Cyclic.cylcic:type_name -> Cyclic
	13, // 8: Known.ts:type_name -> google.protobuf.Timestamp
	14, // 9: Known.duration:type_name -> google.protobuf.Duration
	13, // 10: Known.ts_rep:type_name -> google.protobuf.Timestamp
	14, // 11: Known.duration_rep:type_name -> google.protobuf.Duration
	5,  // 12: OneOfScala.one:type_name -> One
	5,  // 13: SimpleOneOf.one:type_name -> One
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_samples_samples_proto_init() }
func file_samples_samples_proto_init() {
	if File_samples_samples_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_samples_samples_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScalarTypes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_samples_samples_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScalarTypesOptional); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_samples_samples_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScalarTypesRepeated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_samples_samples_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScalarTypesMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_samples_samples_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Nested); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_samples_samples_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*One); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_samples_samples_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Two); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_samples_samples_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Three); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_samples_samples_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cyclic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_samples_samples_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Known); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_samples_samples_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OneOfScala); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_samples_samples_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SimpleOneOf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_samples_samples_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_samples_samples_proto_msgTypes[10].OneofWrappers = []interface{}{
		(*OneOfScala_Double)(nil),
		(*OneOfScala_Float)(nil),
		(*OneOfScala_Int32)(nil),
		(*OneOfScala_Int64)(nil),
		(*OneOfScala_Uint32)(nil),
		(*OneOfScala_Uint64)(nil),
		(*OneOfScala_Sint32)(nil),
		(*OneOfScala_Sint64)(nil),
		(*OneOfScala_Fixed32)(nil),
		(*OneOfScala_Fixed64)(nil),
		(*OneOfScala_Sfixed32)(nil),
		(*OneOfScala_Sfixed64)(nil),
		(*OneOfScala_Bool)(nil),
		(*OneOfScala_String_)(nil),
		(*OneOfScala_Bytes)(nil),
		(*OneOfScala_One)(nil),
	}
	file_samples_samples_proto_msgTypes[11].OneofWrappers = []interface{}{
		(*SimpleOneOf_K)(nil),
		(*SimpleOneOf_V)(nil),
		(*SimpleOneOf_One)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_samples_samples_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_samples_samples_proto_goTypes,
		DependencyIndexes: file_samples_samples_proto_depIdxs,
		MessageInfos:      file_samples_samples_proto_msgTypes,
	}.Build()
	File_samples_samples_proto = out.File
	file_samples_samples_proto_rawDesc = nil
	file_samples_samples_proto_goTypes = nil
	file_samples_samples_proto_depIdxs = nil
}
